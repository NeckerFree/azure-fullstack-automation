---
- name: Deploy Frontend to Azure App Service
  hosts: localhost
  connection: local
  vars:
    node_version: "16-lts"

  tasks:
    - name: Validate variables don't contain command strings
      fail:
        msg: |
          Invalid variables detected!
          - App Service: {{ app_service_name }}
          - Resource Group: {{ resource_group_name }}
          - API URL: {{ lb_api_url }}
          Check GitHub Actions workflow for proper output handling.
      when: >
        '[command]' in app_service_name or
        '[command]' in resource_group_name or
        '[command]' in lb_api_url

    - name: Show deployment configuration
      debug:
        msg: |
          Deployment Configuration:
          - App Service: {{ app_service_name }}
          - Resource Group: {{ resource_group_name }}
          - API URL: {{ lb_api_url }}
          - Node Version: {{ node_version }}

    - name: Update Node.js runtime
      command: >
        az webapp config set
        --resource-group "{{ resource_group_name }}"
        --name "{{ app_service_name }}"
        --linux-fx-version "NODE|{{ node_version }}"
        --output none
      environment:
        AZURE_CLI_DEFAULT_API_VERSION: "2025-04-01"

    - name: Set app settings
      command: >
        az webapp config appsettings set
        --resource-group "{{ resource_group_name }}"
        --name "{{ app_service_name }}"
        --settings >-
          NODE_ENV=production
          WEBSITES_PORT=3000
          BACKEND_URL="{{ lb_api_url }}:8080"
          WEBSITES_ENABLE_APP_SERVICE_STORAGE=true
        --output none
      environment:
        AZURE_CLI_DEFAULT_API_VERSION: "{{ azure_api_version }}"

    - name: Deploy ZIP package
      command: >
        az webapp deployment source config-zip
        --resource-group "{{ resource_group_name }}"
        --name "{{ app_service_name }}"
        --src "./frontend-deploy.zip"
        --output none
      environment:
        AZURE_CLI_DEFAULT_API_VERSION: "{{ azure_api_version }}"

    # --- Verification ---
    - name: Verify deployment
      uri:
        url: "https://{{ app_service_name }}.azurewebsites.net"
        return_content: yes
        status_code: 200
      register: deployment_check
      retries: 5
      delay: 30
      until: deployment_check.status == 200
      ignore_errors: yes

    - name: Show deployment result
      debug:
        msg: "âœ… Successfully deployed to https://{{ app_service_name }}.azurewebsites.net"
      when: deployment_check.status == 200