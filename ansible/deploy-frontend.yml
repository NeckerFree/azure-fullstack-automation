---
- name: Deploy Frontend to Azure App Service
  hosts: localhost
  connection: local
  vars:
    frontend_src: "{{ github_workspace }}/src/movie-analyst-ui"
    node_version: "14-lts"

  tasks:
    - name: Verify frontend directory exists
      stat:
        path: "{{ frontend_src }}"
      register: frontend_dir

    - name: Fail if frontend directory missing
      fail:
        msg: "Frontend source directory not found at {{ frontend_src }}"
      when: not frontend_dir.stat.exists

    - name: Validate required variables
      assert:
        that:
          - lb_api_url is defined
          - app_service_name is defined
          - resource_group_name is defined
        msg: "Required variables (lb_api_url, app_service_name, resource_group_name) must be provided"

    - name: Show deployment configuration
      debug:
        msg: |
          Deployment Configuration:
          - Backend API URL: {{ lb_api_url }}:8080
          - App Service: {{ app_service_name }}
          - Resource Group: {{ resource_group_name }}

    - name: Install qa dependencies
      command: npm install --qa
      args:
        chdir: "{{ frontend_src }}"

    - name: Zip frontend application
      archive:
        path: "{{ frontend_src }}/"
        dest: "./frontend-deploy.zip"
        format: zip
        exclude_path:
          - "{{ frontend_src }}/node_modules/.cache/"
          - "{{ frontend_src }}/test/"
          - "{{ frontend_src }}/.git/"

    - name: Deploy to Azure App Service
      azure.azcollection.azure_rm_webapp:
        resource_group: "{{ resource_group_name }}"
        name: "{{ app_service_name }}"
        state: present
        configuration:
          linux_fx_version: "NODE|{{ node_version }}"
          app_settings:
            NODE_ENV: "qa"
            WEBSITES_PORT: 3000
            BACKEND_URL: "{{ lb_api_url }}:8080"
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: "true"
          always_on: false
        deployment_source:
          package: "./frontend-deploy.zip"

    - name: Verify deployment
      uri:
        url: "https://{{ app_service_name }}.azurewebsites.net"
        return_content: yes
        status_code: 200
      register: deployment_check
      retries: 5
      delay: 30
      until: deployment_check.status == 200
      ignore_errors: yes

    - name: Show deployment result
      debug:
        msg: "Frontend successfully deployed to https://{{ app_service_name }}.azurewebsites.net"
      when: deployment_check.status == 200