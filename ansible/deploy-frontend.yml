---
- name: Deploy Frontend to Existing Azure App Service
  hosts: localhost
  connection: local
  vars:
    frontend_src: "{{ frontend_src_dir | default('src/movie-analyst-ui') }}"
    node_version: "16-lts"  # Updated to Node.js 16
    azure_api_version: "2025-04-01"  # Explicit API version

  tasks:
    # --- Validate source directory ---
    - name: Verify frontend directory exists
      stat:
        path: "{{ frontend_src }}"
      register: frontend_dir

    - name: Fail if frontend directory missing
      fail:
        msg: "Frontend source directory not found at {{ frontend_src }}"
      when: not frontend_dir.stat.exists

    # --- Show deployment info ---
    - name: Show deployment configuration
      debug:
        msg: |
          Deployment Target:
          - WebApp: {{ app_service_name }}
          - Resource Group: {{ resource_group_name }}
          - Backend API: {{ lb_api_url }}:8080
          - Node.js Version: {{ node_version }}

    # --- Build frontend ---
    - name: Install dependencies
      command: npm install
      args:
        chdir: "{{ frontend_src }}"

    - name: Zip frontend application
      archive:
        path: "{{ frontend_src }}/"
        dest: "./frontend-deploy.zip"
        format: zip
        exclude_path:
          - "node_modules/.cache/"
          - "test/"
          - ".git/"

    # --- Configure & Deploy (Azure CLI) ---
    - name: Update Node.js runtime version
      command: |
        az webapp config set \
          --resource-group "{{ resource_group_name }}" \
          --name "{{ app_service_name }}" \
          --linux-fx-version "NODE|{{ node_version }}" \
          --output none
      environment:
        AZURE_CLI_DEFAULT_API_VERSION: "{{ azure_api_version }}"

    - name: Set app settings
      command: |
        az webapp config appsettings set \
          --resource-group "{{ resource_group_name }}" \
          --name "{{ app_service_name }}" \
          --settings \
            NODE_ENV=production \
            WEBSITES_PORT=3000 \
            BACKEND_URL="{{ lb_api_url }}:8080" \
            WEBSITES_ENABLE_APP_SERVICE_STORAGE=true \
          --output none
      environment:
        AZURE_CLI_DEFAULT_API_VERSION: "{{ azure_api_version }}"

    - name: Deploy ZIP package
      command: |
        az webapp deployment source config-zip \
          --resource-group "{{ resource_group_name }}" \
          --name "{{ app_service_name }}" \
          --src "./frontend-deploy.zip" \
          --output none
      environment:
        AZURE_CLI_DEFAULT_API_VERSION: "{{ azure_api_version }}"

    # --- Verify deployment ---
    - name: Check if application is reachable
      uri:
        url: "https://{{ app_service_name }}.azurewebsites.net"
        return_content: yes
        status_code: 200
      register: deployment_check
      retries: 5
      delay: 30
      until: deployment_check.status == 200
      ignore_errors: yes

    - name: Show deployment result
      debug:
        msg: "âœ… Frontend deployed successfully: https://{{ app_service_name }}.azurewebsites.net"
      when: deployment_check.status == 200