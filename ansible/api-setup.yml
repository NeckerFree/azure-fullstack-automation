---
- name: Setup and Deploy Node.js API
  hosts: nodes
  become: yes
  vars:
    app_path: /home/adminuser/ansible-setup/src/movie-analyst-api
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    ansible_ssh_private_key_file: "~/.ssh/vm_ssh_key"

  pre_tasks:
    - name: Wait for SSH to become available
      wait_for_connection:
        timeout: 60

    - name: Verify network connectivity
      ping:

  tasks:
    - name: Install Node.js via Nodesource (replaces NVM)
      block:
        - name: Install prerequisites
          apt:
            name:
              - ca-certificates
              - curl
              - gnupg
            state: present
            update_cache: yes

        - name: Add Nodesource repository
          apt_repository:
            repo: "deb https://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main"
            state: present
            update_cache: yes

        - name: Install Node.js
          apt:
            name: nodejs
            state: present
            update_cache: yes

    - name: Ensure app directory exists
      file:
        path: "{{ app_path }}"
        state: directory
        mode: '0755'
        owner: adminuser
        group: adminuser

    - name: Copy API code
      synchronize:
        src: "{{ playbook_dir }}/../src/movie-analyst-api/"
        dest: "{{ app_path }}"
        recursive: yes
        owner: yes
        group: yes

    - name: Install dependencies
      npm:
        path: "{{ app_path }}"
        state: present
        production: yes

    - name: Configure systemd service
      template:
        src: "{{ playbook_dir }}/../templates/movie-api.service.j2"
        dest: /etc/systemd/system/movie-api.service
        owner: root
        group: root
        mode: '0644'
      notify:
        - Reload systemd
        - Restart movie-api

    - name: Ensure service is enabled
      systemd:
        name: movie-api
        enabled: yes
        state: started

  handlers:
    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Restart movie-api
      systemd:
        name: movie-api
        state: restarted