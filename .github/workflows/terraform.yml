name: Terraform CI/CD 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  actions: read
  id-token: write

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: qa

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: 🔐 Azure Login with Service Principal
        uses: azure/login@v1
        with:
          creds: >-
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
            }

      - name: 🧪 Verify Azure login
        run: az account show

      - name: 🏗️ Ensure Terraform remote backend exists
        run: |
          az group create --name soft-tfstate-rg --location eastus
          az storage account create \
            --name softsastate \
            --resource-group soft-tfstate-rg \
            --location eastus \
            --sku Standard_LRS \
            --encryption-services blob
          az storage container create \
            --name tfstate \
            --account-name softsastate

      - name: 📥 Terraform Init
        run: |
          terraform -chdir=infra init \
            -backend-config="resource_group_name=soft-tfstate-rg" \
            -backend-config="storage_account_name=softsastate" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"

      - name: 📋 Terraform Plan & Apply
        run: |
          terraform -chdir=infra apply -auto-approve -input=false

      - name: 📄 Generate Terraform outputs
        run: |
          terraform -chdir=infra output -json > infra/tf_outputs.json

      - name: ✅ Confirm inventory.ini exists
        run: |
          if [ ! -f ./ansible/inventory.ini ]; then
            echo "❌ inventory.ini not found"
            exit 1
          fi
          head ./ansible/inventory.ini

      - name: 📦 Upload Terraform Outputs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: infra/tf_outputs.json
          retention-days: 3

      - name: 📦 Upload inventory.ini artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-inventory
          path: ./ansible/inventory.ini
