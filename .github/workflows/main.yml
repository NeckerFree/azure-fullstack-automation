# name: Deploy API

# on:
#   workflow_run:
#     workflows: ["Terraform CI/CD"]
#     branches: [simplify]
#     types: [completed]

# env:
#   NODE_VERSION: 16

# permissions:
#   contents: read
#   actions: read
#   id-token: write

# jobs:
#   deploy:
#     if: ${{ github.event.workflow_run.conclusion == 'success' }}
#     runs-on: ubuntu-latest
    
#     steps:
#       - uses: actions/checkout@v3

#       # Configurar Terraform y autenticación con Azure
#       - name: 🛠️ Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.5.0

#       - name: 🔐 Configure Azure Credentials
#         run: |
#           echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
#           echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
#           echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
#           echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

#       # Inicializar Terraform
#       - name: 📥 Terraform Init
#         run: |
#           terraform -chdir=infra init \
#             -backend-config="resource_group_name=soft-tfstate-rg" \
#             -backend-config="storage_account_name=softsastate" \
#             -backend-config="container_name=tfstate" \
#             -backend-config="key=terraform.tfstate"


#       - name: 🚀 Deploy Ansible Configuration
#         run: |
#           chmod +x ./ansible/deploy-ansible-from-local.sh
#           ./ansible/deploy-ansible-from-local.sh

#         NODE_VERSION: 16
#       - name: 🟢 Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ env.NODE_VERSION }}

#       - name: 📦 Install dependencies
#         run: npm ci
#         working-directory: src/movie-analyst-api

#       - name: 🧪 Run tests
#         run: npm test
#         working-directory: src/movie-analyst-api

#       # - name: 🗃️ Deploy Database
#       #   run: | 
#       #     chmod +x ./ansible/deploy-db-from-local.sh
#       #     ./ansible/deploy-db-from-local.sh
          
#       # - name: 🚀 Deploy API
#       #   run: |
#       #     export DB_HOST="$(terraform -chdir=infra output -raw mysql_fqdn)"
#       #     export DB_USER="$(terraform -chdir=infra output -raw mysql_admin_user)"
#       #     export DB_PASS="$(terraform -chdir=infra output -raw mysql_admin_pwd)"
#       #     export DB_NAME="$(terraform -chdir=infra output -raw mysql_database_name)"
#       #     chmod +x ./ansible/deploy-api-from-local.sh
#       #     ./ansible/deploy-api-from-local.sh

